@page "/checkout"
@inject OrderState OrderState
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<div class="main">
    <div class="checkout-cols">
        <div class="checkout-order-details">
            <!-- Título de la sección de revisión del pedido -->
            <h4>Review order</h4>
            <!-- Itera sobre las pizzas en el pedido y muestra los detalles -->
            @foreach (var pizza in Order.Pizzas)
            {
                <p>
                    <strong>
                        <!-- Muestra el tamaño, nombre y precio de cada pizza -->
                        @(pizza.Size)"
                        @pizza.Special.Name
                        (£@pizza.GetFormattedTotalPrice())
                    </strong>
                </p>
            }

            <!-- Muestra el precio total del pedido -->
            <p>
                <strong>
                    Total price:
                    £@Order.GetFormattedTotalPrice()
                </strong>
            </p>
        </div>
    </div>

    <!-- Botón para realizar el pedido, deshabilitado si se está enviando el pedido -->
    <button class="checkout-button btn btn-warning" @onclick="PlaceOrder" disabled=@isSubmitting>
        Place order
    </button>
</div>

@code {
    // Acceso a la orden actual desde el estado de la orden
    Order Order => OrderState.Order;

    // Variable para controlar el estado de envío del pedido
    bool isSubmitting;

    // Método asincrónico para realizar el pedido
    async Task PlaceOrder()
    {
        // Indica que el pedido se está enviando
        isSubmitting = true;

        // Envía el pedido a través de una solicitud HTTP POST
        var response = await HttpClient.PostAsJsonAsync($"{NavigationManager.BaseUri}orders", OrderState.Order);

        // Lee la respuesta y obtiene el ID del nuevo pedido
        var newOrderId = await response.Content.ReadFromJsonAsync<int>();

        // Resetea el estado de la orden después de realizar el pedido
        OrderState.ResetOrder();

        // En el código existente ya se capturaba newOrderId como respuesta a la realización del pedido. Ahora puede usarlo para ir directamente a ese pedido.
        NavigationManager.NavigateTo($"myorders/{newOrderId}");
    }
}
